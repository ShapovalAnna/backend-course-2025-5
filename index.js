// index.js
const http = require("http");
const fs = require("fs");
const path = require("path");
const { program } = require("commander");

// === 1. –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ ===
program
  .requiredOption("-h, --host <host>", "server host address")
  .requiredOption("-p, --port <port>", "server port number")
  .requiredOption("-c, --cache <path>", "path to cache directory");

program.parse(process.argv);
const options = program.opts();

// === 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∫–µ—à—É ===
if (!fs.existsSync(options.cache)) {
  fs.mkdirSync(options.cache, { recursive: true });
  console.log(`‚úÖ Cache directory created at: ${options.cache}`);
} else {
  console.log(`üìÅ Using existing cache directory: ${options.cache}`);
}

// === 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ ===
const server = http.createServer((req, res) => {
  res.writeHead(200, { "Content-Type": "text/plain; charset=utf-8" });
  res.end("Proxy server is running! üê±");
});

// === 4. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
server.listen(options.port, options.host, () => {
  console.log(`üöÄ Server running at http://${options.host}:${options.port}/`);
});
